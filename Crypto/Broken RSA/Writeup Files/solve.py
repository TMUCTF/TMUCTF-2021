from Crypto.Util.number import *
from math import gcd

e = 65537

r3 = 38294995141363656877559436188173251418412691100197256393140460308638550794787818744112258583071336294126349175652937685739135357977138397953176497271990297767710542030794806398990554023682078366911017277132913507751558185664635139569788255417043307025993876712483137550304628463892408528989328338637340992672940717254257361166225386487663916798266053084008606550692911925841142228439929420532161810642604669629382934228394956128406912756886949389147160683794554907865869696323211393177967701903261281784572805974924500562725656953872964810319767573063545083240742668949436980464759657463719337298805344813080835521511369688259879107912684260305354707675843624100268265733513370526723846038560186219876428110243911908628330398759197743234592524657695539684581843303494548908564079793200201288169288394460094077561741813262173165439646165583707235577451270415204994942251172966812727410501723125243542695610865544437241860888488542242547532559144457484672728209876599165987900768477477696271024789692221
r8 = 81062734829272769756784085051551855094771303675961426783580748839187245328044392943566230821255051024729061110902563202492020943737028125291618434444020798218306225569528486175801082995781186098817409366129362852891557070576329438514704128632925085572631950077480675559133299996133771300714669014471912009452378343702698696154176909288644403165239337885885002907495182025084290849291405265977592010829322637907607105073057381614563188354010683971861368638644516235992116497544432397235893046568273968374949248764196873825691279793446938375996707540094791717698283256050784339023011246224381604523918421844631047945372750019220797156767131765869457140205016817917033111993468229305752213024881146163937006919793604750302411310080067132089167659687457548488410876766275198690767875408118392457932449201882999461984112158951775355040385118007292558948829628171219493174768354054929377347514941840645653244609034529638302879947171462115440500759405256807206641647248833685159363595676811726013210811925021
r13 = 53561197482217010005623348391239199695061937361374139018667414538197571081742797585179892422621553909632857733432881006431701969334109404589752984733099604838994509393640095834979608631827422515057529914398890986875790264694846687991206497840122617996317330098552471136286161519590784061567486959591107898420732440096037985856510941859049799603800755943778147049340413784799339755429213541759758374338426738356195042764759140159145162976375703863513698339307874958562274327019643696290032024621233241981407549487646934356163048455649593346046652225615497161295265375866594142899099870380303814983682769649578988149839609234113531164593849700092133888792233824368020290891277375771089030841541313465858941835074628781541173333915616627391797312917359557017998675842982233826326890580904024024925977741857533701212299966990705611291784372328425541925281779490896588889688367127789123313384316810345418261589768135183171535714022138274628974547197475211624060536773722868536315605054803515458682823760935
r18 = 62857993454947830442851028390215795271696411262128758528864716913850178461515878923436803889426424151873907331027676498441069310159226573070562981227066923829328227697683938810509756046575798638471134203734345422314485169468487652742824955038659549851347326242890405133406393469670168829773249505597831957730482926313518836260188517341668059681824776931425935279217672194479413878023310642269046150126183915008987248812965850652722945964123794826750115731078774981856677019691194946203916007967928614848186102809699648751713664304758611097115980522897862739372876006676755548757267074601807273310067538993798856203908851749729628057443153779195135406982167608832925329240254585673524502875740528936800390123296129041594265172510784711137039363006392879100220956907606967008444253742332045639629655313353753102777831168895340896331400976113016947437422400529622830013955850528331739624064097329102753393214666695312537011240077943761268334870961739654617921133545574518458702291556983563372364364689241
r23 = 160911992858044510275641001863247334238868278133557452124440291095475385420447271835920647995097889937007639363357365780183310162392580745085183465451922234808042790100978875091463653869707281689133197316051271899648179104073812620113447857577698585517074237650613608158332630905381349965748753986133401850103472842164273897633806408949679908167129267207829315016636828978301044648508456763883473204657790206433585621630394509024149092324627498442305780531991409743804624291604534796140888294623891575720841595230942742967414987520512872630981629955786430876292260950515660880392049757572015192540007474922895335090910080059335200888054457417264276334242235166788058104454455713925033180551023295180588635533451106163107235526221606641776898471627071933091916198876076302609488560306437430598869084384990995101790073997392475961898025863473693990376555890012403068099864545380408280544798602000795298758322760813029785933799442306105034318871977997471367516896052245844064991044480400403149644145979528

temp = gcd(r3 * r13 - r8 * r8, r8 * r18 - r13 * r13)
n = gcd(temp, r13 * r23 - r18 * r18)
print(n)

# Compute p and q using SageMath
p = 10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087
q = 17168409475383972628504778240855911978985929543286350892069246008372473042523567037011013249871547777584631416739758322856251015798698301831765580955300650407835153601378654173742292554894502681735405620391535895647045866153891745460976487617315465562496499358894287054034024692381191210822762212034588017308516989613261306910988892855362427544142343518767108593353834256519607664876369541892324877459094093260657539475432861721224124049660249386714464357030183841589410520002623236416489710292432265593266725745973870777993186048812530526551997744644388584507538634448903227467825441758880828727826547230875410498763

phi = (p - 1) * (q - 1)
d = inverse(e, phi)

enc = 169235297774742940942021355333816189156217093916866514144397222804106429142499680470202043202652961249057752119231483256629168048425903149871720842919274749143433559443816121809467646900540312246725232604149468633394699211739535774896817819681466703923989721793718210279433158794060422093865412638349201961893401514274768496061998599751372218959654738654228225676485441020849693690523287113360413891431372347718365404340785109535031213242576203242694909345390195057769451445093026949757687563029228696555287901138694025434761487733300661288043927272826415036660006265820235396466013905747282043563400279979810078217832910919157418093634005790579208324336651322282087238793407151461185663804335409840280410175579785942240883772413508571787457304889015222348403115386573285290728676573270716882126059828740082864243212786906812229478671752965405601311231500833299787749197735267510562487374501314292496053407340415795083155332014895563809824401057461031038610125336390709278567186529319346744727431697949

secret_msg = pow(enc, d, n)
print(long_to_bytes(secret_msg))